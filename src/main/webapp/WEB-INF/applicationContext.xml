<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ @copyright ：神农大学生软件创新中心 版权所有 © 2019
  ~
  ~ @author 16级信息与计算科学潘鹏程
  ~
  ~ @version
  ~
  ~ @date 2019.08.22
  ~
  ~ @Description
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:component-scan
            base-package="com.snsoft.teamreading.service,
            com.snsoft.teamreading.dao,
            com.snsoft.teamreading.utils,
            com.snsoft.teamreading.bean"/>
    <!--支持注解驱动的事务管理-->
    <tx:annotation-driven/>
    <cache:annotation-driven/>
    <!--引入属性文件，在配置中占位使用 -->
    <context:property-placeholder location="classpath*:db.properties"/>

    <!--装配dataSource-->
    <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url" value="${mariadb.url}"/>
        <property name="driverClassName" value="${mariadb.driver}"/>
        <property name="username" value="${mariadb.user}"/>
        <property name="password" value="${mariadb.password}"/>
    </bean>

    <!--会话工厂bean sqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>

        <property name="configLocation" value="/WEB-INF/mybatis-config.xml"/>
        <!-- 别名 -->
        <property name="typeAliasesPackage"
                  value="com.snsoft.teamreading.pojo, com.snsoft.teamreading.returnPojo"/>
        <!-- sql映射文件路径 -->
        <property name="mapperLocations" value="classpath*:com/snsoft/teamreading/mapper/*.xml"/>
    </bean>

    <!--自动扫描对象关系映射 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定会话工厂，如果当前上下文中只定义了一个则该属性可省去 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 指定要自动扫描接口的基础包，实现接口 -->
        <property name="basePackage" value="com.snsoft.teamreading.dao"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>

    <!--定义事物管理器，由spring管理事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置redis连接池-->
    <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="20"/>
        <property name="maxTotal" value="40"/>
        <property name="maxWaitMillis" value="20000"/>
    </bean>

    <!--配置redis连接工厂-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"/>
        <property name="poolConfig" ref="redisPoolConfig"/>
        <property name="hostName" value="localhost"/>
        <property name="port" value="6379"/>
    </bean>

    <!--往Spring容器中添加序列化器bean-->
    <bean id="genericJackson2JsonRedisSerializer"
          class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <!--配置redisTemplate-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="stringSerializer" ref="stringRedisSerializer"/>
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="valueSerializer" ref="genericJackson2JsonRedisSerializer"/>
    </bean>

    <!--配置缓存管理器，并指定需要用到的缓存名字-->
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg name="cacheNames">
            <set>
                <value>task</value>
                <value>answer</value>
            </set>
        </constructor-arg>
        <constructor-arg name="redisOperations" ref="redisTemplate"/>
    </bean>

</beans>